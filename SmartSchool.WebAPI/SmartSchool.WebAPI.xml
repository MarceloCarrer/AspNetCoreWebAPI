<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartSchool.WebAPI</name>
    </assembly>
    <members>
        <member name="T:SmartSchool.WebAPI.Data.IRepository">
            <summary>
            Interface da classe de repositorio
            </summary>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.Add``1(``0)">
            <summary>
            Metodo de cadastar novo
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.Update``1(``0)">
            <summary>
            Metodo de atualizar
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.Delete``1(``0)">
            <summary>
            Metodo de deletar
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.SaveChanges">
            <summary>
            Metodo de salvar
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetAllAlunos(System.Boolean)">
            <summary>
            Metodo de listar alunos
            </summary>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetAllAlunosByDisciplinaId(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar aluno e disciplinas por Id
            </summary>
            <param name="disciplinaId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetAlunoById(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar aluno por Id
            </summary>
            <param name="alunoId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetAllProfessores(System.Boolean)">
            <summary>
            Metodo de listar professores
            </summary>
            <param name="includeAlunos"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetAllProfessoresByDisciplinaId(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar professor e disciplinas por Id
            </summary>
            <param name="disciplinaId"></param>
            <param name="includeAlunos"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.IRepository.GetProfessorById(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar professor por Id
            </summary>
            <param name="professorId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.WebAPI.Data.Repository">
            <summary>
            Classe do repositorio
            </summary>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.#ctor(SmartSchool.WebAPI.Data.SmartContext)">
            <summary>
            Construtor da classe
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.Add``1(``0)">
            <summary>
            Metodo de cadastar novo
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.Update``1(``0)">
            <summary>
            Metodo de atualizar
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.Delete``1(``0)">
            <summary>
            Metodo de deletar
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.SaveChanges">
            <summary>
            Metodo de salvar
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetAllAlunos(System.Boolean)">
            <summary>
            Metodo de listar alunos
            </summary>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetAllAlunosByDisciplinaId(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar aluno e disciplinas por Id
            </summary>
            <param name="disciplinaId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetAlunoById(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar aluno por Id
            </summary>
            <param name="alunoId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetAllProfessores(System.Boolean)">
            <summary>
            Metodo de listar professores
            </summary>
            <param name="includeAlunos"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetAllProfessoresByDisciplinaId(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar professor e disciplinas por Id
            </summary>
            <param name="disciplinaId"></param>
            <param name="includeAlunos"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.Data.Repository.GetProfessorById(System.Int32,System.Boolean)">
            <summary>
            Metodo de listar professor por Id
            </summary>
            <param name="professorId"></param>
            <param name="includeProfessor"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.WebAPI.V1.Controllers.AlunoController">
            <summary>
            Classe Aluno v2
            </summary>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.#ctor(SmartSchool.WebAPI.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            Construtor da classe Aluno
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.Get">
            <summary>
            Metodo responsavel para retornar todos os alunos
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.GetById(System.Int32)">
            <summary>
            Metodo responsavel para retornar apenas um aluno por Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.Post(SmartSchool.WebAPI.V1.Dtos.AlunoRegistrarDto)">
            <summary>
            Metodo responsavel para cadastrar um aluno
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.Put(System.Int32,SmartSchool.WebAPI.V1.Dtos.AlunoRegistrarDto)">
            <summary>
            Metodo responsavel para atualizar um aluno
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.Patch(System.Int32,SmartSchool.WebAPI.V1.Dtos.AlunoRegistrarDto)">
            <summary>
            Metodo responsavel para atualizar um aluno
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.AlunoController.Delete(System.Int32)">
            <summary>
            Metodo responsavel para deletar um aluno
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.WebAPI.V1.Controllers.ProfessorController">
            <summary>
            Classe Professor
            </summary>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.#ctor(SmartSchool.WebAPI.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            Construtor da classe Professor
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.Get">
            <summary>
            Metodo responsavel para retornar todos os professores
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.GetById(System.Int32)">
            <summary>
            Metodo responsavel para retornar apenas um professor por Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.Post(SmartSchool.WebAPI.V1.Dtos.ProfessorRegistrarDto)">
            <summary>
            Metodo responsavel para cadastrar um professor
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.Put(System.Int32,SmartSchool.WebAPI.V1.Dtos.ProfessorRegistrarDto)">
            <summary>
            Metodo responsavel para atualizar um professor
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.Patch(System.Int32,SmartSchool.WebAPI.V1.Dtos.ProfessorRegistrarDto)">
            <summary>
            Metodo responsavel para atualizar um professor
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V1.Controllers.ProfessorController.Delete(System.Int32)">
            <summary>
            Metodo responsavel para deletar um professor
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.WebAPI.V2.Controllers.AlunoController">
            <summary>
            Classe Aluno V2
            </summary>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.#ctor(SmartSchool.WebAPI.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            Construtor da classe Aluno
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.Get">
            <summary>
            Metodo responsavel para retornar todos os alunos
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.GetById(System.Int32)">
            <summary>
            Metodo responsavel para retornar apenas um aluno por Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.Post(SmartSchool.WebAPI.V2.Dtos.AlunoRegistrarDto)">
            <summary>
            Metodo responsavel para cadastrar um aluno
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.Put(System.Int32,SmartSchool.WebAPI.V2.Dtos.AlunoRegistrarDto)">
            <summary>
            Metodo responsavel para atualizar um aluno
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.WebAPI.V2.Controllers.AlunoController.Delete(System.Int32)">
            <summary>
            Metodo responsavel para deletar um aluno
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
